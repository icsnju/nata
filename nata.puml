@startuml

  '一个测试工程的类
  class Project {
     String name
     String description
     String coverPic
     Apk[] apkList
  }

  '一个Apk,有自己的版本,以及关联对应的一组测试计划
  class Apk {
      String version
      TestPlan[] plans
  }


 '一个测试计划针对一个版本的Apk文件应用某种具体测试技术进行测试
  class TestPlan {
      String name
      TestCase [] testList
  }


'一个具体的测试技术有自己的配置选项
abstract class TestCaseGenerator {
    String name
    String description
'    Config config
}

'一个抽象设置项
'abstract class Config {
'}

'一个具体的测试结果
abstract class TestResult{
    Date startTime
    Date endTime
}

'树形结果图
class TreeResult {
    Object treemap
}

'日志列表
class LogResult {
    String[] logs
}

'缺陷列表
class BugResult {
   String[] bugs
}


class TestCase{
    Result[] result
}

class HumanGenerator {
    String input()
}

class DFSGenerator {
    String dfs()
}

class RecorderGenerator {
    String record()
}

class MonkeyGenerator {
   String run()
}

TestResult <|-- TreeResult
TestResult <|-- LogResult
TestResult <|-- BugResult

ModelDrivenTesting -- TestCaseGenerator : implements >
TestCaseGenerator <|-- HumanGenerator
TestCaseGenerator <|-- DFSGenerator
TestCaseGenerator <|-- RecorderGenerator

TestPlan -- TestCaseRunner:  has >

TestCaseRunner -- TestCase
TestCaseRunner -- TestResult : produces >

TestCaseRunner -- ModelDrivenTesting : < implements
TestCaseRunner -- RandomTesting : < implements

TestPlan *-- TestCase: Contains >
TestCaseGenerator -- TestPlan: < has
TestCase -- TestCaseGenerator: < generates
TestCase *-- TestResult: contains

TestCaseGenerator -- RandomTesting : < implements
MonkeyGenerator --|> TestCaseGenerator
Project *-- Apk: contains
Apk *-- TestPlan: contains


@enduml
